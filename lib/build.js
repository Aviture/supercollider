var fs         = require('fs');
var path       = require('path');
var rimraf     = require('rimraf');

// Creates HTML pages out of an object of components, and writes them to disk.
// tree: an object of components generated by Super.process().
module.exports = function(tree) {
  var handlebars = this.options.handlebars || require('handlebars');

  // Fetch template code
  var fileData = fs.readFileSync(this.options.template);

  // Compile it into Handlebars templates
  var template = handlebars.compile(fileData.toString(), {noEscape: true});

  if (this.options.dest && !fs.existsSync(this.options.dest)) {
    fs.mkdirSync(this.options.dest);
  }

  // For each component in the list, render a template with that component's data and write it to disk
  for (var i in tree) {
    var data = tree[i];
    var output;

    // Catch Handlebars errors, because they won't show up in the Gulp console
    try {
      output = template(data);
    }
    catch(e) {
      throw new Error('Handlebars error: '+e.message);
    }

    return output;
  }
}